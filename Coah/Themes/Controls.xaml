<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="ButtonBaseStyle"
		   TargetType="ButtonBase">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="MinWidth"
				Value="75" />
		<Setter Property="MinHeight"
				Value="23" />
		<Setter Property="Padding"
				Value="8,4" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="Background"
				Value="{StaticResource MetroControlDarkBrush}" />
		<Setter Property="FontWeight"
				Value="SemiBold" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Border Name="InnerBorder"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsPressed"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerBorder"
									Property="Background">
								<Setter.Value>
									<SolidColorBrush Opacity="0.5"
													 Color="White" />
								</Setter.Value>
							</Setter>
						</MultiTrigger>
						<Trigger Property="ToggleButton.IsChecked"
								 Value="True">
							<Setter Property="Background"
									Value="{StaticResource MetroAccentBrush}" />
							<Setter Property="Foreground"
									Value="{StaticResource MetroAccentTextBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Button"
		   BasedOn="{StaticResource ButtonBaseStyle}">
		<Style.Triggers>
			<Trigger Property="IsDefault"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource MetroAccentBrush}" />
				<Setter Property="Foreground"
						Value="{StaticResource MetroAccentTextBrush}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="ToggleButton"
		   BasedOn="{StaticResource ButtonBaseStyle}" />
	<Style x:Key="HyperlinkButtonStyle"
		   TargetType="ButtonBase">
		<Setter Property="Cursor"
				Value="Hand" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Border Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Margin="{TemplateBinding Padding}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Hyperlink">
		<Setter Property="TextDecorations"
				Value="None" />
		<Setter Property="Foreground"
				Value="{StaticResource MetroAccentBrush}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="TextDecorations"
						Value="Underline" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Image">
		<Setter Property="RenderOptions.BitmapScalingMode"
				Value="HighQuality" />
	</Style>
	<Style TargetType="TextBox">
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MetroControlDarkBrush}" />
		<Setter Property="Padding"
				Value="2" />
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Command="Cut" />
					<MenuItem Command="Copy" />
					<MenuItem Command="Paste" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
						<ScrollViewer Margin="0"
									  x:Name="PART_ContentHost" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
			</Trigger>
			<Trigger Property="IsFocused"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="{StaticResource MetroControlDarkBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="PasswordBox">
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MetroControlDarkBrush}" />
		<Setter Property="Padding"
				Value="2" />
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Command="Paste" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Border Name="Border"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
						<ScrollViewer Margin="0"
									  x:Name="PART_ContentHost" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
			</Trigger>
			<Trigger Property="IsFocused"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="{StaticResource MetroControlDarkBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="CheckBox">
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="Margin"
				Value="0,0,0,4" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
	</Style>
	<Style TargetType="ListBox">
		<Setter Property="BorderBrush"
				Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer Padding="{TemplateBinding Padding}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="ListBoxItem">
		<Setter Property="BorderBrush"
				Value="{x:Null}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
			</Trigger>
			<Trigger Property="IsSelected"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource MetroControlBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="ProgressBar">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Background"
				Value="{x:Null}" />
		<Setter Property="Foreground"
				Value="{StaticResource MetroAccentBrush}" />
		<Setter Property="Height"
				Value="4" />
		<Setter Property="ClipToBounds"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ProgressBar">
					<ControlTemplate.Resources>
						<ExponentialEase x:Key="ProgressBarEaseOut"
										 EasingMode="EaseOut"
										 Exponent="1" />
						<ExponentialEase x:Key="ProgressBarEaseIn"
										 EasingMode="EaseIn"
										 Exponent="1" />
					</ControlTemplate.Resources>
					<Grid Name="Container"
						  Margin="-4,0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="CommonStates">
								<VisualState Name="Determinate" />
								<VisualState Name="Indeterminate">
									<Storyboard Duration="00:00:04.4"
												RepeatBehavior="Forever">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot1"
																	   Storyboard.TargetProperty="RenderTransform.X"
																	   BeginTime="00:00:00.0">
											<LinearDoubleKeyFrame KeyTime="00:00:00.0"
																  Value="0" />
											<EasingDoubleKeyFrame KeyTime="00:00:00.5"
																  Value="1000"
																  EasingFunction="{StaticResource ProgressBarEaseOut}" />
											<LinearDoubleKeyFrame KeyTime="00:00:02.0"
																  Value="2000" />
											<EasingDoubleKeyFrame KeyTime="00:00:02.5"
																  Value="3000"
																  EasingFunction="{StaticResource ProgressBarEaseIn}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot2"
																	   Storyboard.TargetProperty="RenderTransform.X"
																	   BeginTime="00:00:00.2">
											<LinearDoubleKeyFrame KeyTime="00:00:00.0"
																  Value="0" />
											<EasingDoubleKeyFrame KeyTime="00:00:00.5"
																  Value="1000"
																  EasingFunction="{StaticResource ProgressBarEaseOut}" />
											<LinearDoubleKeyFrame KeyTime="00:00:02.0"
																  Value="2000" />
											<EasingDoubleKeyFrame KeyTime="00:00:02.5"
																  Value="3000"
																  EasingFunction="{StaticResource ProgressBarEaseIn}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot3"
																	   Storyboard.TargetProperty="RenderTransform.X"
																	   BeginTime="00:00:00.4">
											<LinearDoubleKeyFrame KeyTime="00:00:00.0"
																  Value="0" />
											<EasingDoubleKeyFrame KeyTime="00:00:00.5"
																  Value="1000"
																  EasingFunction="{StaticResource ProgressBarEaseOut}" />
											<LinearDoubleKeyFrame KeyTime="00:00:02.0"
																  Value="2000" />
											<EasingDoubleKeyFrame KeyTime="00:00:02.5"
																  Value="3000"
																  EasingFunction="{StaticResource ProgressBarEaseIn}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot4"
																	   Storyboard.TargetProperty="RenderTransform.X"
																	   BeginTime="00:00:00.6">
											<LinearDoubleKeyFrame KeyTime="00:00:00.0"
																  Value="0" />
											<EasingDoubleKeyFrame KeyTime="00:00:00.5"
																  Value="1000"
																  EasingFunction="{StaticResource ProgressBarEaseOut}" />
											<LinearDoubleKeyFrame KeyTime="00:00:02.0"
																  Value="2000" />
											<EasingDoubleKeyFrame KeyTime="00:00:02.5"
																  Value="3000"
																  EasingFunction="{StaticResource ProgressBarEaseIn}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot5"
																	   Storyboard.TargetProperty="RenderTransform.X"
																	   BeginTime="00:00:00.8">
											<LinearDoubleKeyFrame KeyTime="00:00:00.0"
																  Value="0" />
											<EasingDoubleKeyFrame KeyTime="00:00:00.5"
																  Value="1000"
																  EasingFunction="{StaticResource ProgressBarEaseOut}" />
											<LinearDoubleKeyFrame KeyTime="00:00:02.0"
																  Value="2000" />
											<EasingDoubleKeyFrame KeyTime="00:00:02.5"
																  Value="3000"
																  EasingFunction="{StaticResource ProgressBarEaseIn}" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot1"
																	   Storyboard.TargetProperty="Opacity"
																	   BeginTime="00:00:00.0">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="1" />
											<DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot2"
																	   Storyboard.TargetProperty="Opacity"
																	   BeginTime="00:00:00.2">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="1" />
											<DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot3"
																	   Storyboard.TargetProperty="Opacity"
																	   BeginTime="00:00:00.4">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="1" />
											<DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot4"
																	   Storyboard.TargetProperty="Opacity"
																	   BeginTime="00:00:00.6">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="1" />
											<DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Dot5"
																	   Storyboard.TargetProperty="Opacity"
																	   BeginTime="00:00:00.8">
											<DiscreteDoubleKeyFrame KeyTime="0"
																	Value="1" />
											<DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
																	Value="0" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border Margin="4,0"
								Name="PART_Track" />
						<Decorator Margin="4,0"
								   Name="PART_Indicator"
								   HorizontalAlignment="Left">
							<Rectangle Name="Indicator"
									   Fill="{TemplateBinding Foreground}" />
						</Decorator>
						<Viewbox Name="Animation"
								 Stretch="Fill"
								 Visibility="Collapsed"
								 UseLayoutRounding="True"
								 SnapsToDevicePixels="True">
							<Grid Width="3000">
								<Grid.Resources>
									<Style TargetType="Control">
										<Setter Property="CacheMode">
											<Setter.Value>
												<BitmapCache />
											</Setter.Value>
										</Setter>
										<Setter Property="RenderTransform">
											<Setter.Value>
												<TranslateTransform />
											</Setter.Value>
										</Setter>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="Control">
													<Viewbox Stretch="Fill">
														<Border Width="{Binding ActualWidth, ElementName=Container}">
															<Rectangle Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
																	   Width="4"
																	   Height="4"
																	   HorizontalAlignment="Left" />
														</Border>
													</Viewbox>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Grid.Resources>
								<Control Name="Dot1" />
								<Control Name="Dot2" />
								<Control Name="Dot3" />
								<Control Name="Dot4" />
								<Control Name="Dot5" />
							</Grid>
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsIndeterminate"
								 Value="True">
							<Setter TargetName="Indicator"
									Property="Visibility"
									Value="Collapsed" />
							<Setter TargetName="Animation"
									Property="Visibility"
									Value="Visible" />
						</Trigger>
						<Trigger Property="Orientation"
								 Value="Vertical">
							<Setter Property="LayoutTransform"
									TargetName="Container">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MetroVerticalTabControlStyle"
		   TargetType="TabControl">
		<Setter Property="TabStripPlacement"
				Value="Left" />
		<Setter Property="BorderBrush"
				Value="{x:Null}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Background"
				Value="{x:Null}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="TabItem">
					<Setter Property="BorderBrush"
							Value="{x:Null}" />
					<Setter Property="BorderThickness"
							Value="0" />
					<Setter Property="Background"
							Value="Transparent" />
					<Setter Property="Margin"
							Value="0" />
					<Setter Property="Padding"
							Value="16,4,4,4" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="TabItem">
								<Border Name="Border"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}">
									<Border Name="InnerBorder"
											Padding="{TemplateBinding Padding}">
										<ContentPresenter ContentSource="Header"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Border>
								</Border>
								<ControlTemplate.Triggers>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver"
													   Value="True" />
											<Condition Property="IsSelected"
													   Value="False" />
										</MultiTrigger.Conditions>
										<Setter TargetName="InnerBorder"
												Property="Background">
											<Setter.Value>
												<SolidColorBrush Opacity="0.05"
																 Color="Black" />
											</Setter.Value>
										</Setter>
									</MultiTrigger>
									<Trigger Property="IsSelected"
											 Value="True">
										<Setter TargetName="Border"
												Property="Background"
												Value="{StaticResource MetroAccentBrush}" />
										<Setter TargetName="Border"
												Property="TextBlock.Foreground"
												Value="{StaticResource MetroAccentTextBrush}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabControl">
					<Border Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="128" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<ItemsPresenter />
							<Border Grid.Column="1"
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
								<ContentPresenter ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MetroSubTabControlStyle"
		   TargetType="TabControl">
		<Setter Property="BorderBrush"
				Value="{x:Null}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Background"
				Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="TabItem">
					<Setter Property="Background"
							Value="Transparent" />
					<Setter Property="Margin"
							Value="0,0,8,8" />
					<Setter Property="Padding"
							Value="0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="TabItem">
								<Border Name="Border"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}"
										Padding="{TemplateBinding Padding}">
									<ContentPresenter ContentSource="Header"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected"
											 Value="True">
										<Setter TargetName="Border"
												Property="TextBlock.FontWeight"
												Value="Bold" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabControl">
					<Border Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<ScrollViewer VerticalScrollBarVisibility="Disabled"
										  HorizontalScrollBarVisibility="Auto">
								<ItemsPresenter Margin="16" />
							</ScrollViewer>
							<ContentPresenter Grid.Row="1"
											  ContentSource="SelectedContent" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>