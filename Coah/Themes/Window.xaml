<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
					xmlns:v="clr-namespace:Linearstar.Coah.Views">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="WindowStyle"
		   TargetType="Window">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="UseLayoutRounding"
				Value="True" />
		<Setter Property="FontFamily"
				Value="{StaticResource MetroFontFamilyNormal}" />
	</Style>
	<Style x:Key="TitleBarButtonStyle"
		   TargetType="Button">
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Foreground"
				Value="Black" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Width"
				Value="34" />
		<Setter Property="Height"
				Value="25" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource MetroAccentTextBrush}" />
				<Setter Property="Foreground"
						Value="{StaticResource MetroAccentBrush}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Background"
						Value="{StaticResource MetroAccentBrush}" />
				<Setter Property="Foreground"
						Value="{StaticResource MetroAccentTextBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MetroWindowStyle"
		   TargetType="Window"
		   BasedOn="{StaticResource WindowStyle}">
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="UseLayoutRounding"
				Value="True" />
		<Setter Property="TextOptions.TextHintingMode"
				Value="Fixed" />
		<Setter Property="TextOptions.TextRenderingMode"
				Value="ClearType" />
		<Setter Property="TextOptions.TextFormattingMode"
				Value="Display" />
		<Setter Property="RenderOptions.ClearTypeHint"
				Value="Enabled" />
		<Setter Property="ResizeMode"
				Value="CanResizeWithGrip" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MetroWindowBorderBrush}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Background"
				Value="{StaticResource MetroWindowBackgroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<Border Padding="{TemplateBinding Margin}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid Background="{TemplateBinding Background}">
							<StackPanel Orientation="Horizontal"
										HorizontalAlignment="Right"
										VerticalAlignment="Top"
										TextOptions.TextFormattingMode="Display"
										TextOptions.TextRenderingMode="Aliased"
										WindowChrome.IsHitTestVisibleInChrome="True">
								<StackPanel.Resources>
									<Style TargetType="Button"
										   BasedOn="{StaticResource TitleBarButtonStyle}" />
								</StackPanel.Resources>
								<Button Name="minimizeButton">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																	PropertyName="WindowState"
																	Value="Minimized" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<Path Data="M0,6L0,9 9,9 9,6 0,6z"
										  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
								</Button>
								<Button Name="maximizeButton">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																	PropertyName="WindowState"
																	Value="Maximized" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<Path Data="M0,0L0,9 9,9 9,0z M8,3L8,8 1,8 1,3z"
										  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
								</Button>
								<Button Name="restoreButton"
										Visibility="Collapsed">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																	PropertyName="WindowState"
																	Value="Normal" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<Path Data="M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z"
										  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
								</Button>
								<Button Name="closeButton">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ei:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"
																MethodName="Close" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<Path Data="M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z"
										  Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
								</Button>
							</StackPanel>
							<AdornerDecorator>
								<ContentPresenter />
							</AdornerDecorator>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState"
								 Value="Maximized">
							<Setter TargetName="maximizeButton"
									Property="Visibility"
									Value="Collapsed" />
							<Setter TargetName="restoreButton"
									Property="Visibility"
									Value="Visible" />
						</Trigger>
						<Trigger Property="ResizeMode"
								 Value="CanMinimize">
							<Setter TargetName="maximizeButton"
									Property="Visibility"
									Value="Collapsed" />
							<Setter TargetName="restoreButton"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
						<Trigger Property="ResizeMode"
								 Value="NoResize">
							<Setter TargetName="maximizeButton"
									Property="Visibility"
									Value="Collapsed" />
							<Setter TargetName="restoreButton"
									Property="Visibility"
									Value="Collapsed" />
							<Setter TargetName="minimizeButton"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsActive"
					 Value="False">
				<Setter Property="BorderBrush"
						Value="{StaticResource MetroControlDarkBrush}" />
			</Trigger>
			<Trigger Property="WindowState"
					 Value="Maximized">
				<Setter Property="Margin"
						Value="{x:Static v:MetroWindowBehavior.PaddedBorderThickness}" />
				<Setter Property="BorderThickness"
						Value="0" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="MetroDialogStyle"
		   TargetType="Window"
		   BasedOn="{StaticResource MetroWindowStyle}">
		<Setter Property="ResizeMode"
				Value="NoResize" />
		<Setter Property="ShowInTaskbar"
				Value="False" />
		<Setter Property="v:WindowOptions.ShowIcon"
				Value="False" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Background"
				Value="{StaticResource MetroAccentBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MetroAccentTextBrush}" />
		<Setter Property="Padding"
				Value="16,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Window">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}">
						<AdornerDecorator MaxWidth="640">
							<ContentPresenter />
						</AdornerDecorator>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>