<Window x:Name="Window"
		x:Class="Linearstar.Coah.Views.ViewerView"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:cal="http://www.caliburnproject.org"
		xmlns:dz="clr-namespace:Dragablz;assembly=Dragablz"
		xmlns:vm="clr-namespace:Linearstar.Coah.ViewModels"
		xmlns:v="clr-namespace:Linearstar.Coah.Views"
		mc:Ignorable="d"
		Title="{Binding DisplayTitle}"
		Height="480"
		Width="640"
		Style="{StaticResource MetroWindowStyle}"
		d:DataContext="{d:DesignInstance vm:ViewerViewModel}">
	<i:Interaction.Behaviors>
		<v:MetroWindowBehavior />
	</i:Interaction.Behaviors>
	<Grid>
		<i:Interaction.Behaviors>
			<ei:DataStateBehavior Binding="{Binding Items.Count, ElementName=FeedMenuItem}"
								  Value="0"
								  TrueState="FeedMenuItemHidden"
								  FalseState="FeedMenuItemVisible" />
			<ei:DataStateBehavior Binding="{Binding Items.Count, ElementName=ArticleMenuItem}"
								  Value="0"
								  TrueState="ArticleMenuItemHidden"
								  FalseState="ArticleMenuItemVisible" />
		</i:Interaction.Behaviors>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="FeedMenuItemVisible" />
				<VisualState x:Name="FeedMenuItemHidden">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FeedMenuItem"
													   Storyboard.TargetProperty="Visibility">
							<DiscreteObjectKeyFrame KeyTime="0"
													Value="{x:Static Visibility.Collapsed}" />
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup>
				<VisualState x:Name="ArticleMenuItemVisible" />
				<VisualState x:Name="ArticleMenuItemHidden">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArticleMenuItem"
													   Storyboard.TargetProperty="Visibility">
							<DiscreteObjectKeyFrame KeyTime="0"
													Value="{x:Static Visibility.Collapsed}" />
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<Grid.RowDefinitions>
			<RowDefinition Height="25" />
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid Margin="8,4,102,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock VerticalAlignment="Center"
					   Margin="8,0"
					   Text="{Binding DisplayTitle}"
					   Style="{StaticResource MetroTextSubtleStyle}" />
		</Grid>
		<Menu Grid.Row="1">
			<MenuItem Header="ファイル(_F)">
				<MenuItem Header="URL を開く(_O)...">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/WebOpen.png" />
					</MenuItem.Icon>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</MenuItem>
				<MenuItem Header="名前を付けて保存(_S)..." />
				<Separator />
				<MenuItem Header="エクスポート(_E)..." />
				<Separator />
				<MenuItem Header="印刷(_P)...">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Print.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="最近閉じた作品集(_L)">
					<MenuItem Header="(なし)"
							  IsEnabled="False" />
				</MenuItem>
				<MenuItem Header="最近閉じた作品(_P)">
					<MenuItem Header="(なし)"
							  IsEnabled="False" />
				</MenuItem>
				<Separator />
				<MenuItem Header="終了(_X)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Close.png" />
					</MenuItem.Icon>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="表示(_V)">
				<MenuItem Header="場所(_S)"
						  IsCheckable="True"
						  IsChecked="{Binding IsSelected, ElementName=LocationTabItem}" />
				<MenuItem Header="検索(_E)"
						  IsCheckable="True"
						  IsChecked="{Binding IsSelected, ElementName=SearchTabItem}" />
				<Separator />
				<MenuItem Header="列の選択(_C)">
					<MenuItem Header="(なし)" />
				</MenuItem>
				<Separator />
				<MenuItem Header="ページ内検索(_F)" />
			</MenuItem>
			<MenuItem Header="場所(_S)">
				<MenuItem.Resources>
					<CollectionViewSource x:Key="LocationItems"
										  Source="{Binding Client.LocationTree.Items}" />
				</MenuItem.Resources>
				<MenuItem.ItemContainerStyleSelector>
					<v:GenericStyleSelector>
						<Style v:GenericStyleSelector.DataType="vm:LocationViewModel"
							   TargetType="MenuItem"
							   BasedOn="{StaticResource {x:Type MenuItem}}">
							<Setter Property="Header"
									Value="{Binding Location.Name}" />
							<Setter Property="ItemsSource"
									Value="{Binding Items}" />
						</Style>
					</v:GenericStyleSelector>
				</MenuItem.ItemContainerStyleSelector>
				<MenuItem.ItemsSource>
					<CompositeCollection>
						<MenuItem Header="場所を追加(_A)...">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/LocationAdd.png" />
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Header="新規フォルダを作成(_F)">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/FolderNew.png" />
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Header="新規ブックマークを作成(_B)...">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/BookmarkNew.png" />
							</MenuItem.Icon>
						</MenuItem>
						<Separator />
						<MenuItem Header="最新の情報に更新(_R)">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/Refresh.png" />
							</MenuItem.Icon>
						</MenuItem>
						<Separator />
						<CollectionContainer Collection="{Binding Source={StaticResource LocationItems}}" />
					</CompositeCollection>
				</MenuItem.ItemsSource>
			</MenuItem>
			<MenuItem Name="FeedMenuItem"
					  Header="作品集(_L)" />
			<MenuItem Name="ArticleMenuItem"
					  Header="作品(_P)" />
			<MenuItem Name="ToolsMenuItem"
					  Header="ツール(_T)">
				<MenuItem.Resources>
					<CollectionViewSource x:Key="MergeItems" />
					<CollectionViewSource x:Key="ToolItems" />
				</MenuItem.Resources>
				<MenuItem.ItemsSource>
					<CompositeCollection>
						<MenuItem Header="既得ログ検索(_F)" />
						<MenuItem Header="_SS さがすよ！" />
						<MenuItem Header="保管されたテキストの整理(_O)" />
						<MenuItem Header="Coah の設定のインポート(_N)..." />
						<CollectionContainer Collection="{Binding Source={StaticResource MergeItems}}" />
						<Separator />
						<CollectionContainer Collection="{Binding Source={StaticResource ToolItems}}" />
						<MenuItem Header="外部ツール(_E)..." />
						<Separator />
						<MenuItem Header="環境設定(_P)..."
								  cal:Action.TargetWithoutContext="{Binding Client}"
								  cal:Message.Attach="ShowSettings">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/Settings.png" />
							</MenuItem.Icon>
						</MenuItem>
					</CompositeCollection>
				</MenuItem.ItemsSource>
			</MenuItem>
			<MenuItem Header="ウィンドウ(_W)">
				<MenuItem.Resources>
					<CollectionViewSource x:Key="WindowItems"
										  Source="{Binding Client.Items}" />
				</MenuItem.Resources>
				<MenuItem.ItemContainerStyleSelector>
					<v:GenericStyleSelector>
						<Style v:GenericStyleSelector.DataType="vm:ViewerViewModel"
							   TargetType="MenuItem"
							   BasedOn="{StaticResource {x:Type MenuItem}}">
							<Setter Property="Header"
									Value="{Binding DisplayName}" />
							<Setter Property="IsChecked"
									Value="{Binding IsActive, Mode=OneWay}" />
							<Setter Property="cal:Message.Attach"
									Value="Activate" />
						</Style>
					</v:GenericStyleSelector>
				</MenuItem.ItemContainerStyleSelector>
				<MenuItem.ItemsSource>
					<CompositeCollection>
						<MenuItem Header="水平タブグループの新規作成(_Z)">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/GroupHorizontal.png" />
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Header="垂直タブグループの新規作成(_V)">
							<MenuItem.Icon>
								<Image Source="/Resources/Icons/GroupVertical.png" />
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Header="すべてのドキュメントを閉じる(_L)" />
						<Separator />
						<CollectionContainer Collection="{Binding Source={StaticResource WindowItems}}" />
					</CompositeCollection>
				</MenuItem.ItemsSource>
			</MenuItem>
			<MenuItem Header="ヘルプ(_H)">
				<MenuItem Header="ソフトウェアの更新を確認(_C)" />
				<Separator />
				<MenuItem Header="バージョン情報(_A)" />
			</MenuItem>
		</Menu>
		<Popup Name="OpenPopup">
			<ContentControl Style="{StaticResource TopLeftBalloonPopupContentStyle}">
				<StackPanel>
					<TextBlock Text="開きたい作品集、または作品への URL を入力します:"
							   Margin="0,0,0,8" />
					<TextBox Margin="0,0,0,8" />
					<StackPanel Grid.Row="2"
								HorizontalAlignment="Right"
								Orientation="Horizontal">
						<Button Content="開く"
								IsDefault="True" />
						<Button Content="キャンセル"
								IsCancel="True"
								Margin="8,0,0,0" />
					</StackPanel>
				</StackPanel>
			</ContentControl>
		</Popup>
		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="128" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Border>
				<TabControl Background="{StaticResource MetroControlLightBrush}">
					<TabItem Name="LocationTabItem"
							 Header="場所"
							 IsSelected="True">
						<v:LocationTreeView cal:Bind.Model="{Binding Client.LocationTree}" />
					</TabItem>
					<TabItem Name="SearchTabItem"
							 Header="検索">

					</TabItem>
				</TabControl>
			</Border>
			<GridSplitter Background="Transparent"
						  HorizontalAlignment="Right"
						  Width="3" />
			<dz:TabablzControl Name="TabablzControl"
							   Grid.Column="2"
							   Background="{StaticResource MetroControlLightLightBrush}"
							   ItemsSource="{Binding Items}"
							   SelectedItem="{Binding ActiveItem}">
				<dz:TabablzControl.InterTabController>
					<dz:InterTabController InterTabClient="{Binding TabClient, ElementName=Window}" />
				</dz:TabablzControl.InterTabController>
				<dz:TabablzControl.ItemContainerStyleSelector>
					<v:GenericStyleSelector>
						<Style TargetType="dz:DragablzItem"
							   BasedOn="{StaticResource {x:Type dz:DragablzItem}}"
							   v:GenericStyleSelector.DataType="{x:Type vm:ArticlePageViewModel}">
							<Setter Property="Background"
									Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
						</Style>
					</v:GenericStyleSelector>
				</dz:TabablzControl.ItemContainerStyleSelector>
				<dz:TabablzControl.CustomHeaderItemTemplate>
					<DataTemplate DataType="{x:Type vm:IPageViewModel}">
						<ContentControl Content="{Binding}">
							<ContentControl.Resources>
								<DataTemplate DataType="{x:Type vm:FeedPageViewModel}">
									<Grid>
										<ProgressBar Margin="-8,-4"
													 IsIndeterminate="{Binding ProgressState.CurrentProgress.IsIndeterminate}"
													 Value="{Binding ProgressState.CurrentProgress.Value, Mode=OneWay}"
													 Maximum="{Binding ProgressState.CurrentProgress.Maximum}"
													 VerticalAlignment="Top"
													 Visibility="{Binding ProgressState.CurrentProgress.HasProgressValue, Converter={StaticResource BooleanToVisibilityConverter}}" />
										<StackPanel Orientation="Horizontal">
											<Border Visibility="{Binding Model.FeedSummary.Location.IsSingleFeedLocation, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
												<TextBlock Text="{Binding Model.FeedSummary.Location.ShortName}"
														   Visibility="{Binding Model.FeedSummary.Location.HasShortName, Converter={StaticResource BooleanToVisibilityConverter}}"
														   Opacity="0.5"
														   Margin="0,0,4,0" />
											</Border>
											<TextBlock Text="{Binding DisplayName}" />
										</StackPanel>
									</Grid>
								</DataTemplate>
								<DataTemplate DataType="{x:Type vm:ArticlePageViewModel}">
									<Grid>
										<ProgressBar Margin="-8,-4"
													 IsIndeterminate="{Binding ProgressState.CurrentProgress.IsIndeterminate}"
													 Value="{Binding ProgressState.CurrentProgress.Value, Mode=OneWay}"
													 Maximum="{Binding ProgressState.CurrentProgress.Maximum}"
													 VerticalAlignment="Top"
													 Visibility="{Binding ProgressState.CurrentProgress.HasProgressValue, Converter={StaticResource BooleanToVisibilityConverter}}" />
										<Border Margin="-8,-4"
												Background="#339933"
												VerticalAlignment="Top"
												Height="2"
												Visibility="{Binding Model.HasUnread, Converter={StaticResource BooleanToVisibilityConverter}}" />
										<StackPanel Orientation="Horizontal">
											<TextBlock Text="{Binding Model.ArticleSummary.FeedSummary.Location.ShortName}"
													   Visibility="{Binding Model.ArticleSummary.FeedSummary.Location.HasShortName, Converter={StaticResource BooleanToVisibilityConverter}}"
													   Opacity="0.5"
													   Margin="0,0,4,0" />
											<TextBlock Text="{Binding DisplayName}" />
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ContentControl.Resources>
						</ContentControl>
					</DataTemplate>
				</dz:TabablzControl.CustomHeaderItemTemplate>
				<dz:TabablzControl.ContentTemplate>
					<DataTemplate DataType="{x:Type vm:IPageViewModel}">
						<ContentControl IsTabStop="False"
										cal:View.Model="{Binding}" />
					</DataTemplate>
				</dz:TabablzControl.ContentTemplate>
			</dz:TabablzControl>
		</Grid>
		<StatusBar Grid.Row="3"
				   Height="22">
			<StatusBarItem Name="ArticleStatusBarItem"
						   Padding="0,0,0,1"
						   DockPanel.Dock="Right" />
			<StatusBarItem Name="FeedStatusBarItem"
						   Padding="0,0,0,1"
						   DockPanel.Dock="Right" />
			<StatusBarItem Content="{Binding CurrentProgress.Message}"
						   Padding="4,0,4,1" />
		</StatusBar>
	</Grid>
</Window>
