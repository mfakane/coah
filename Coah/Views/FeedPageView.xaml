<UserControl x:Name="Container"
			 x:Class="Linearstar.Coah.Views.FeedPageView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
			 xmlns:cal="http://www.caliburnproject.org"
			 xmlns:vm="clr-namespace:Linearstar.Coah.ViewModels"
			 xmlns:v="clr-namespace:Linearstar.Coah.Views"
			 mc:Ignorable="d"
			 d:DesignHeight="300"
			 d:DesignWidth="900"
			 d:DataContext="{d:DesignInstance vm:FeedPageViewModel}"
			 IsTabStop="False"
			 Loaded="UserControl_Loaded"
			 Unloaded="UserControl_Unloaded">
	<UserControl.Resources>
		<StackPanel Orientation="Horizontal"
					x:Key="FeedStatusBarItem">
			<TextBlock Text="{Binding Articles.Count, StringFormat={}{0} 項目}"
					   Margin="4,0" />
		</StackPanel>
		<CollectionViewSource x:Key="CollectionViewSource"
							  Source="{Binding Articles}" />
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>
		<Menu Visibility="Collapsed">
			<MenuItem Name="FeedMenuItem"
					  Header="作品集(_L)">
				<MenuItem Header="名前を付けて場所を保存(_L)...">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/LocationSave.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="最新の情報に更新(_R)"
						  cal:Message.Attach="RefreshView; [Key Shift+F5] = [RefreshView]">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Refresh.png" />
					</MenuItem.Icon>
				</MenuItem>
				<MenuItem Header="すべて最新の情報に更新(_A)" />
				<MenuItem Name="Stop"
						  Header="中止(_S)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Stop.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator Visibility="{Binding Model.FeedSummary.CanGetCachedArticles, Converter={StaticResource BooleanToVisibilityConverter}}" />
				<MenuItem Header="既得ログを表示(_F)"
						  Visibility="{Binding Model.FeedSummary.CanGetCachedArticles, Converter={StaticResource BooleanToVisibilityConverter}}"
						  cal:Message.Attach="RefreshCached" />
				<Separator />
				<MenuItem Name="ShowLocation"
						  Visibility="{Binding Model.FeedSummary.Location.IsSingleFeedLocation, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
						  Header="場所を開く(_L)" />
				<MenuItem Name="OpenInBrowser"
						  Header="ブラウザで開く(_B)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/WebBrowser.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Name="ShowUnreadArticles"
						  Header="更新のある項目を開く(_U)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/FolderOpen.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="クリップボードへコピー(_C)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Clipboard.png" />
					</MenuItem.Icon>
					<MenuItem Header="(なし)"
							  IsEnabled="False" />
				</MenuItem>
				<MenuItem Header="フィルタ(_F)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Filter.png" />
					</MenuItem.Icon>
					<MenuItem Header="フィルタを適用"
							  IsCheckable="True" />
					<Separator />
					<MenuItem Header="(なし)"
							  IsEnabled="False" />
				</MenuItem>
				<Separator />
				<MenuItem Header="ログを再取得(_G)"
						  cal:Message.Attach="RefreshHard; [Key Ctrl+Shift+G] = [RefreshHard]" />
				<MenuItem Header="ログを削除して閉じる(_D)">
					<MenuItem.Icon>
						<Image Source="/Resources/Icons/Delete.png" />
					</MenuItem.Icon>
				</MenuItem>
				<Separator />
				<MenuItem Header="閉じる(_X)"
						  cal:Message.Attach="Close; [Key Ctrl+Shift+W] = [Close]" />
			</MenuItem>
		</Menu>
		<StackPanel>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ToolBar Padding="16,8,0,4">
					<Button Style="{StaticResource HyperlinkButtonStyle}"
							Margin="0,0,4,0"
							Visibility="{Binding Model.FeedSummary.Location.IsSingleFeedLocation, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
							cal:Message.Attach="ShowLocation">
						<TextBlock Text="{Binding Model.FeedSummary.Location.Name}"
								   Opacity="0.5" />
					</Button>
					<Button Content="{Binding Model.FeedSummary.Name}"
							Style="{StaticResource HyperlinkButtonStyle}"
							cal:Message.Attach="OpenInBrowser" />
				</ToolBar>
				<ToolBar Grid.Column="1"
						 Padding="0,8,8,4">
					<Border Width="128"
							Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
							BorderThickness="1"
							Margin="0,0,4,0"
							BorderBrush="{StaticResource MetroControlDarkBrush}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<toolkit:WatermarkTextBox Grid.Column="1"
													  BorderThickness="0"
													  Background="Transparent"
													  Padding="2"
													  Text="{Binding Model.SearchString, UpdateSourceTrigger=PropertyChanged}"
													  Watermark="検索" />
							<Image Source="/Resources/Icons/Search.png"
								   Margin="2,0,0,0"
								   VerticalAlignment="Center" />
						</Grid>
					</Border>
					<v:SplitMenuButton x:Name="RefreshOrStop"
									   ToolTip="最新の情報に更新"
									   Style="{StaticResource ToolBarSplitMenuButtonStyle}">
						<v:SplitMenuButton.DropDownMenu>
							<ContextMenu>
								<MenuItem Header="最新の情報に更新"
										  cal:Message.Attach="RefreshView">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Refresh.png" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="ログを再取得"
										  cal:Message.Attach="RefreshHard" />
								<Separator Visibility="{Binding Model.FeedSummary.CanGetCachedArticles, Converter={StaticResource BooleanToVisibilityConverter}}" />
								<MenuItem Header="既得ログを表示"
										  Visibility="{Binding Model.FeedSummary.CanGetCachedArticles, Converter={StaticResource BooleanToVisibilityConverter}}"
										  cal:Message.Attach="RefreshCached" />
							</ContextMenu>
						</v:SplitMenuButton.DropDownMenu>
						<Grid>
							<Image Source="/Resources/Icons/Refresh.png"
								   Visibility="{Binding ProgressState.IsBusy, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
							<Image Source="/Resources/Icons/Stop.png"
								   Visibility="{Binding ProgressState.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />
						</Grid>
					</v:SplitMenuButton>
					<Separator />
					<Button ToolTip="更新のある項目を開く"
							cal:Message.Attach="ShowUnreadArticles">
						<Image Source="/Resources/Icons/FolderOpen.png" />
					</Button>
					<Separator />
					<v:DropDownMenuButton ToolTip="クリップボードへコピー"
										  Style="{DynamicResource ToolBarDropDownMenuButtonStyle}">
						<v:DropDownMenuButton.DropDownMenu>
							<ContextMenu>
								<MenuItem Header="foo" />
							</ContextMenu>
						</v:DropDownMenuButton.DropDownMenu>
						<Image Source="/Resources/Icons/Clipboard.png" />
					</v:DropDownMenuButton>
					<v:SplitMenuButton ToolTip="フィルタ"
									   Style="{StaticResource ToolBarSplitMenuButtonStyle}">
						<v:SplitMenuButton.DropDownMenu>
							<ContextMenu>
								<MenuItem Header="フィルタを適用" />
							</ContextMenu>
						</v:SplitMenuButton.DropDownMenu>
						<Image Source="/Resources/Icons/Filter.png" />
					</v:SplitMenuButton>
					<Separator />
					<Button ToolTip="閉じる"
							cal:Message.Attach="Close">
						<Image Source="/Resources/Icons/Close.png" />
					</Button>
				</ToolBar>
			</Grid>
			<ToolBar Background="{StaticResource MetroAccentBrush}"
					 Foreground="{StaticResource MetroAccentTextBrush}"
					 Padding="16,4,8,4"
					 HorizontalContentAlignment="Right"
					 Header="{Binding FilterString}"
					 Visibility="{Binding HasFilter, Converter={StaticResource BooleanToVisibilityConverter}}">
				<Button Name="ClearFilters"
						ToolTip="閉じる">
					<Image Source="/Resources/Icons/Close.png" />
				</Button>
			</ToolBar>
		</StackPanel>
		<!--<DataGrid Name="ArticleList"
				  Grid.Row="1"
				  ItemsSource="{Binding Source={StaticResource CollectionViewSource}}"
				  PreviewMouseLeftButtonDown="ArticleList_PreviewMouseLeftButtonDown"
				  PreviewMouseLeftButtonUp="ArticleList_PreviewMouseLeftButtonUp">
			<DataGrid.RowStyle>
				<Style TargetType="DataGridRow">
					<Setter Property="Tag"
							Value="{Binding DataContext, ElementName=Container}" />
					<Setter Property="IsSelected"
							Value="{Binding IsSelected}" />
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu cal:Action.TargetWithoutContext="{Binding}">
								<MenuItem Header="開く(_O)"
										  cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  cal:Message.Attach="ShowSelectedItems" />
								<MenuItem Header="ブラウザで開く(_B)"
										  cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  cal:Message.Attach="OpenSelectedItemsInBrowser" />
								<Separator />
								<MenuItem Header="類似タイトルを検索(_S)"
										  cal:Message.Attach="ShowSimiliarArticles" />
								<Separator />
								<MenuItem Header="クリップボードへコピー(_C)">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Clipboard.png" />
									</MenuItem.Icon>
									<MenuItem Header="(なし)"
											  IsEnabled="False" />
								</MenuItem>
								<MenuItem Header="ブックマーク(_K)">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Bookmark.png" />
									</MenuItem.Icon>
									<MenuItem Header="(なし)"
											  IsEnabled="False" />
								</MenuItem>
								<Separator />
								<MenuItem Header="ログを取得(_G)" />
								<MenuItem Header="ログを削除(_D)"
										  cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  cal:Message.Attach="DeleteSelectedItemsCache">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Delete.png" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>
					<Setter Property="ToolTip"
							Value="{Binding Tags}" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding Model.IsLost}"
									 Value="True">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</DataGrid.RowStyle>
			<DataGrid.Columns>
				<DataGridTemplateColumn Width="24"
										CanUserSort="True"
										CanUserReorder="False"
										CanUserResize="False">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate DataType="vm:ArticleSummaryViewModel">
							<StackPanel Width="16"
										Height="16">
								<Image Source="/Resources/Icons/ArticleMarkerRead.png"
									   Visibility="{Binding Model.HasReadAll, Converter={StaticResource BooleanToVisibilityConverter}}" />
								<Image Source="/Resources/Icons/ArticleMarkerUpdated.png"
									   Visibility="{Binding Model.HasNewComment, Converter={StaticResource BooleanToVisibilityConverter}}" />
								<Image Source="/Resources/Icons/ArticleMarkerNew.png"
									   Visibility="{Binding Model.IsNew, Converter={StaticResource BooleanToVisibilityConverter}}" />
							</StackPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTextColumn Header="No."
									Binding="{Binding Model.Index}">
					<DataGridTextColumn.CellStyle>
						<Style TargetType="DataGridCell"
							   BasedOn="{StaticResource {x:Type DataGridCell}}">
							<Setter Property="HorizontalContentAlignment"
									Value="Right" />
						</Style>
					</DataGridTextColumn.CellStyle>
				</DataGridTextColumn>
				<DataGridTextColumn Header="件名"
									Binding="{Binding Model.Title}" />
				<DataGridTextColumn Header="レス"
									Binding="{Binding Model.CommentCount}">
					<DataGridTextColumn.CellStyle>
						<Style TargetType="DataGridCell"
							   BasedOn="{StaticResource {x:Type DataGridCell}}">
							<Setter Property="HorizontalContentAlignment"
									Value="Right" />
						</Style>
					</DataGridTextColumn.CellStyle>
				</DataGridTextColumn>
				<DataGridTextColumn Header="既読"
									Binding="{Binding Model.ReadCommentCount}">
					<DataGridTextColumn.CellStyle>
						<Style TargetType="DataGridCell"
							   BasedOn="{StaticResource {x:Type DataGridCell}}">
							<Setter Property="HorizontalContentAlignment"
									Value="Right" />
						</Style>
					</DataGridTextColumn.CellStyle>
				</DataGridTextColumn>
				<DataGridTextColumn Header="新着"
									Binding="{Binding Model.NewCommentCount}">
					<DataGridTextColumn.CellStyle>
						<Style TargetType="DataGridCell"
							   BasedOn="{StaticResource {x:Type DataGridCell}}">
							<Setter Property="HorizontalContentAlignment"
									Value="Right" />
						</Style>
					</DataGridTextColumn.CellStyle>
				</DataGridTextColumn>
				<DataGridTextColumn Header="日時"
									Binding="{Binding Model.DateTime.LocalDateTime, StringFormat=yy/MM/dd HH:mm}" />
			</DataGrid.Columns>
		</DataGrid>-->
		<ListView Name="ArticleList"
				  Grid.Row="1"
				  ItemsSource="{Binding Source={StaticResource CollectionViewSource}}"
				  Padding="-2,0"
				  BorderThickness="0"
				  Background="{x:Null}"
				  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				  Grid.IsSharedSizeScope="True"
				  PreviewMouseLeftButtonDown="ArticleList_PreviewMouseLeftButtonDown"
				  PreviewMouseLeftButtonUp="ArticleList_PreviewMouseLeftButtonUp"
				  GridViewColumnHeader.Click="ArticleList_GridViewColumnHeaderClick">
			<ListView.View>
				<GridView>
					<GridView.ColumnHeaderContainerStyle>
						<Style TargetType="GridViewColumnHeader">
							<Setter Property="Background"
									Value="Transparent" />
							<Setter Property="Padding"
									Value="6,4" />
							<Setter Property="HorizontalContentAlignment"
									Value="Left" />
							<Setter Property="BorderThickness"
									Value="0,0,0,1" />
							<Setter Property="BorderBrush"
									Value="{StaticResource MetroControlDarkBrush}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="GridViewColumnHeader">
										<Grid>
											<Border BorderBrush="{TemplateBinding BorderBrush}"
													BorderThickness="{TemplateBinding BorderThickness}"
													Padding="{TemplateBinding Padding}"
													Background="{TemplateBinding Background}">
												<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
																  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
											</Border>
											<Path Name="AscendingArrow"
												  Data="M0,3L3,0 6,3"
												  Stroke="{StaticResource MetroControlDarkDarkBrush}"
												  UseLayoutRounding="True"
												  HorizontalAlignment="Center"
												  VerticalAlignment="Top"
												  Visibility="Collapsed" />
											<Path Name="DescendingArrow"
												  Data="M0,0L3,3 6,0"
												  Margin="0,1,0,0"
												  Stroke="{StaticResource MetroControlDarkDarkBrush}"
												  UseLayoutRounding="True"
												  HorizontalAlignment="Center"
												  VerticalAlignment="Top"
												  Visibility="Collapsed" />
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="Tag"
													 Value="Ascending">
												<Setter TargetName="AscendingArrow"
														Property="Visibility"
														Value="Visible" />
											</Trigger>
											<Trigger Property="Tag"
													 Value="Descending">
												<Setter TargetName="DescendingArrow"
														Property="Visibility"
														Value="Visible" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<Trigger Property="Tag"
										 Value="Descending">

								</Trigger>
								<Trigger Property="Role"
										 Value="Normal">
									<Setter Property="BorderThickness"
											Value="0,0,1,1" />
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Role"
												   Value="Normal" />
										<Condition Property="IsMouseOver"
												   Value="True" />
									</MultiTrigger.Conditions>
									<Setter Property="Background"
											Value="{StaticResource MetroHighlightBrush}" />
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="Role"
												   Value="Normal" />
										<Condition Property="IsPressed"
												   Value="True" />
									</MultiTrigger.Conditions>
									<Setter Property="Background"
											Value="{StaticResource MetroAccentBrush}" />
								</MultiTrigger>
							</Style.Triggers>
						</Style>
					</GridView.ColumnHeaderContainerStyle>
					<GridViewColumn Width="24" />
					<GridViewColumn Width="64">
						<GridViewColumnHeader x:Name="TitleHeader"
											  Content="件名" />
					</GridViewColumn>
					<GridViewColumn Width="64">
						<GridViewColumnHeader x:Name="AuthorHeader"
											  Content="作者" />
					</GridViewColumn>
					<GridViewColumn Width="64">
						<GridViewColumnHeader x:Name="CommentCountHeader"
											  Content="レス" />
					</GridViewColumn>
					<GridViewColumn Width="64">
						<GridViewColumnHeader x:Name="NewCommentCountHeader"
											  Content="新着" />
					</GridViewColumn>
					<GridViewColumn Width="64">
						<GridViewColumnHeader x:Name="DateTimeHeader"
											  Content="日時" />
					</GridViewColumn>
				</GridView>
			</ListView.View>
			<ListView.ItemContainerStyle>
				<Style TargetType="ListViewItem"
					   BasedOn="{StaticResource {x:Type ListBoxItem}}">
					<Setter Property="Foreground"
							Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					<Setter Property="Margin"
							Value="2,0" />
					<Setter Property="Tag"
							Value="{Binding DataContext, ElementName=Container}" />
					<Setter Property="IsSelected"
							Value="{Binding IsSelected}" />
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu cal:Action.TargetWithoutContext="{Binding}">
								<MenuItem Header="開く(_O)"
										  cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  cal:Message.Attach="ShowSelectedItems" />
								<MenuItem Header="ブラウザで開く(_B)"
										  cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  cal:Message.Attach="OpenSelectedItemsInBrowser" />
								<Separator />
								<MenuItem Header="類似タイトルを検索(_S)"
										  cal:Message.Attach="ShowSimiliarArticles" />
								<Separator />
								<MenuItem Header="クリップボードへコピー(_C)">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Clipboard.png" />
									</MenuItem.Icon>
									<MenuItem Header="(なし)"
											  IsEnabled="False" />
								</MenuItem>
								<MenuItem Header="ブックマーク(_K)">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Bookmark.png" />
									</MenuItem.Icon>
									<MenuItem Header="(なし)"
											  IsEnabled="False" />
								</MenuItem>
								<Separator />
								<MenuItem Header="ログを取得(_G)" />
								<MenuItem Header="ログを削除(_D)"
										  cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
										  cal:Message.Attach="DeleteSelectedItemsCache">
									<MenuItem.Icon>
										<Image Source="/Resources/Icons/Delete.png" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>
				</Style>
			</ListView.ItemContainerStyle>
			<ListView.ItemTemplate>
				<DataTemplate DataType="vm:ArticleSummaryViewModel">
					<Grid Margin="16,4">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"
											  SharedSizeGroup="Index" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<TextBlock Text="{Binding Model.Index}"
								   Opacity="0.6"
								   Margin="0,0,8,4" />
						<TextBlock Text="{Binding Model.Title}"
								   HorizontalAlignment="Left"
								   TextTrimming="WordEllipsis"
								   ToolTipService.Placement="Relative"
								   ToolTipService.HorizontalOffset="-7"
								   ToolTipService.VerticalOffset="-5"
								   Grid.Column="1"
								   Margin="0,0,0,4">
							<TextBlock.ToolTip>
								<TextBlock Text="{Binding Model.Title}"
										   FontFamily="{StaticResource MetroFontFamilyNormal}"
										   FontSize="9pt" />
							</TextBlock.ToolTip>
						</TextBlock>
						<Grid Grid.Column="1"
							  Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto"
												  SharedSizeGroup="DateTime" />
							</Grid.ColumnDefinitions>
							<TextBlock Text="{Binding Model.Author}"
									   TextTrimming="WordEllipsis"
									   Margin="0,0,8,0" />
							<TextBlock Text="{Binding Tags}"
									   HorizontalAlignment="Left"
									   Visibility="{Binding HasTags, Converter={StaticResource BooleanToVisibilityConverter}}"
									   TextTrimming="WordEllipsis"
									   ToolTipService.Placement="Relative"
									   ToolTipService.HorizontalOffset="-7"
									   ToolTipService.VerticalOffset="-5"
									   Opacity="0.6"
									   Grid.Column="1">
								<TextBlock.ToolTip>
									<TextBlock Text="{Binding Tags}"
											   FontFamily="{StaticResource MetroFontFamilyNormal}"
											   FontSize="9pt" />
								</TextBlock.ToolTip>
						</TextBlock>
							<Grid Opacity="0.6"
								  Margin="8,0,0,0"
								  Grid.Column="2"
								  Visibility="{Binding Model.HasNewComment, Converter={StaticResource BooleanToVisibilityConverter}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto"
													  SharedSizeGroup="NewCommentCount" />
								</Grid.ColumnDefinitions>
								<TextBlock Text="新着" />
								<TextBlock Text="{Binding Model.NewCommentCount}"
										   Margin="8,0,0,0"
										   TextAlignment="Right"
										   Grid.Column="1" />
							</Grid>
							<Grid Opacity="0.6"
								  Margin="8,0,0,0"
								  Grid.Column="3">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto"
													  SharedSizeGroup="CommentCount" />
								</Grid.ColumnDefinitions>
								<TextBlock Text="レス" />
								<TextBlock Text="{Binding Model.CommentCount}"
										   Margin="8,0,0,0"
										   TextAlignment="Right"
										   Grid.Column="1" />
							</Grid>
							<TextBlock Text="{Binding Model.DateTime.LocalDateTime, StringFormat=yy/MM/dd HH:mm}"
									   Opacity="0.6"
									   Grid.Row="1"
									   Grid.Column="4"
									   Margin="8,0,0,0" />
						</Grid>
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
		</ListView>

		<ContentControl Grid.Row="1"
						Style="{StaticResource InformationBarStyle}"
						Content="{Binding ProgressState.CurrentError.Exception.Message}"
						Visibility="{Binding ProgressState.HasError, Converter={StaticResource BooleanToVisibilityConverter}}" />
	</Grid>
</UserControl>
