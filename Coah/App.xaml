<Application x:Class="Linearstar.Coah.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
			 xmlns:dz="clr-namespace:Dragablz;assembly=Dragablz"
			 xmlns:local="clr-namespace:Linearstar.Coah"
			 xmlns:v="clr-namespace:Linearstar.Coah.Views"
			 Startup="Application_Startup"
			 Exit="Application_Exit">
	<Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary>
					<local:AppBootstrapper x:Key="Bootstrapper" />
				</ResourceDictionary>
				<ResourceDictionary Source="Themes/Generic.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<v:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
			<v:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter" />
			<v:CompareConverter x:Key="CompareConverter" />
			<Style x:Key="ToolbarHeaderTextBlockStyle"
				   TargetType="TextBlock"
				   BasedOn="{StaticResource MetroTextSubtleStyle}">
				<Setter Property="FontSize"
						Value="11" />
			</Style>
			<Style TargetType="ScrollViewer">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ScrollViewer">
							<Border BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup Name="VerticalScrollState">
										<VisualState Name="HasNotVerticallyScrolled" />
										<VisualState Name="HasVerticallyScrolled">
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="VerticalScrollBorder"
																 Storyboard.TargetProperty="Opacity"
																 Duration="0"
																 To="1" />
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<i:Interaction.Behaviors>
									<ei:DataStateBehavior Binding="{Binding Value, ElementName=PART_VerticalScrollBar}"
														  Value="0"
														  TrueState="HasNotVerticallyScrolled"
														  FalseState="HasVerticallyScrolled" />
								</i:Interaction.Behaviors>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<ScrollContentPresenter Name="PART_ScrollContentPresenter"
															Margin="{TemplateBinding Padding}"
															CanContentScroll="{TemplateBinding CanContentScroll}"
															ContentTemplate="{TemplateBinding ContentTemplate}" />
									<StackPanel>
										<Border Height="{Binding Padding.Top, RelativeSource={RelativeSource TemplatedParent}}" />
										<Border Name="VerticalScrollBorder"
												VerticalAlignment="Top"
												IsHitTestVisible="False"
												Opacity="0"
												Height="4">
											<Border.Background>
												<LinearGradientBrush Opacity="0.1"
																	 EndPoint="0,1">
													<GradientStop Color="Black" />
													<GradientStop Color="Transparent"
																  Offset="1" />
												</LinearGradientBrush>
											</Border.Background>
										</Border>
									</StackPanel>
									<ScrollBar Name="PART_VerticalScrollBar"
											   Grid.Column="1"
											   Orientation="Vertical"
											   IsTabStop="False"
											   ViewportSize="{TemplateBinding ViewportHeight}"
											   Maximum="{TemplateBinding ScrollableHeight}"
											   Value="{TemplateBinding VerticalOffset}"
											   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
									<ScrollBar Name="PART_HorizontalScrollBar"
											   Grid.Row="1"
											   Orientation="Horizontal"
											   IsTabStop="False"
											   ViewportSize="{TemplateBinding ViewportWidth}"
											   Maximum="{TemplateBinding ScrollableWidth}"
											   Value="{TemplateBinding HorizontalOffset}"
											   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
								</Grid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="DataGridCell">
				<Setter Property="BorderThickness"
						Value="0" />
				<Setter Property="Padding"
						Value="2" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type DataGridCell}">
							<Border Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Padding="{TemplateBinding Padding}">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="DataGrid">
				<Setter Property="SelectionMode"
						Value="Extended" />
				<Setter Property="SelectionUnit"
						Value="FullRow" />
				<Setter Property="BorderThickness"
						Value="0" />
				<Setter Property="IsReadOnly"
						Value="True" />
				<Setter Property="AutoGenerateColumns"
						Value="False" />
				<Setter Property="GridLinesVisibility"
						Value="None" />
				<Setter Property="HeadersVisibility"
						Value="Column" />
				<Setter Property="AlternationCount"
						Value="2" />
				<Setter Property="Background"
						Value="Transparent" />
				<Setter Property="RowBackground"
						Value="Transparent" />
				<Setter Property="AlternatingRowBackground"
						Value="{StaticResource MetroWindowBackgroundBrush}" />
				<Setter Property="BorderThickness"
						Value="0" />
			</Style>
			<Style x:Key="ToolBarSplitButtonStyle"
				   TargetType="toolkit:SplitButton">
				<Setter Property="Margin"
						Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="toolkit:SplitButton">
							<Grid>
								<Border Name="Bd">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Button Name="PART_ActionButton"
												Margin="0"
												Style="{StaticResource ToolBarButtonBaseStyle}">
											<ContentPresenter Name="ActionButtonContent"
															  ContentTemplate="{TemplateBinding ContentTemplate}"
															  Content="{TemplateBinding Content}"
															  RecognizesAccessKey="True" />
										</Button>
										<ToggleButton Name="PART_ToggleButton"
													  Grid.Column="1"
													  Margin="1,0,0,0"
													  Padding="0"
													  Foreground="{StaticResource MetroControlDarkDarkBrush}"
													  IsTabStop="False"
													  IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
													  Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
											<ToggleButton.IsHitTestVisible>
												<Binding Path="IsOpen"
														 RelativeSource="{RelativeSource TemplatedParent}">
													<Binding.Converter>
														<toolkit:InverseBoolConverter />
													</Binding.Converter>
												</Binding>
											</ToggleButton.IsHitTestVisible>
											<Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
												  VerticalAlignment="Center"
												  Data="M0,0 6,0 3,3z" />
										</ToggleButton>
									</Grid>
								</Border>
								<Popup Name="PART_Popup"
									   AllowsTransparency="True"
									   Focusable="False"
									   HorizontalOffset="1"
									   IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}"
									   Placement="Bottom"
									   StaysOpen="False"
									   VerticalOffset="1">
									<ContentControl Style="{StaticResource MetroPopupContentStyle}">
										<ContentPresenter Name="PART_ContentPresenter"
														  Content="{TemplateBinding DropDownContent}" />
									</ContentControl>
								</Popup>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger SourceName="Bd"
										 Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="PART_ActionButton"
											Property="Background"
											Value="{StaticResource MetroHighlightBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Background"
											Value="{StaticResource MetroHighlightBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
								<Trigger SourceName="PART_ActionButton"
										 Property="IsPressed"
										 Value="True">
									<Setter TargetName="PART_ActionButton"
											Property="Background"
											Value="{StaticResource MetroAccentBrush}" />
									<Setter TargetName="PART_ActionButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
								</Trigger>
								<Trigger SourceName="PART_ToggleButton"
										 Property="IsPressed"
										 Value="True">
									<Setter TargetName="PART_ActionButton"
											Property="Background"
											Value="Transparent" />
									<Setter TargetName="PART_ActionButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Background"
											Value="Transparent" />
									<Setter TargetName="PART_ToggleButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="Bd"
											Property="Background"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
								<Trigger SourceName="PART_ToggleButton"
										 Property="IsChecked"
										 Value="True">
									<Setter TargetName="PART_ActionButton"
											Property="Background"
											Value="Transparent" />
									<Setter TargetName="PART_ActionButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Background"
											Value="Transparent" />
									<Setter TargetName="PART_ToggleButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="Bd"
											Property="Background"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="ToolBarDropDownButtonStyle"
				   TargetType="toolkit:DropDownButton">
				<Setter Property="Margin"
						Value="1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="toolkit:DropDownButton">
							<Grid>
								<ToggleButton Name="PART_DropDownButton"
											  Margin="0"
											  Grid.Column="1"
											  Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
											  IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
									<ToggleButton.IsHitTestVisible>
										<Binding Path="IsOpen"
												 RelativeSource="{RelativeSource TemplatedParent}">
											<Binding.Converter>
												<toolkit:InverseBoolConverter />
											</Binding.Converter>
										</Binding>
									</ToggleButton.IsHitTestVisible>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
														  Content="{TemplateBinding Content}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  RecognizesAccessKey="True"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
										<Path Name="Arrow"
											  Grid.Column="1"
											  Margin="4,0,-1,0"
											  Fill="{StaticResource MetroControlDarkDarkBrush}"
											  VerticalAlignment="Center"
											  Data="M0,0 6,0 3,3z" />
									</Grid>
								</ToggleButton>
								<Popup Name="PART_Popup"
									   AllowsTransparency="True"
									   Focusable="False"
									   HorizontalOffset="1"
									   IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
									   Placement="Bottom"
									   StaysOpen="False"
									   VerticalOffset="1">
									<ContentControl Style="{StaticResource MetroPopupContentStyle}">
										<ContentPresenter Name="PART_ContentPresenter"
														  Content="{TemplateBinding DropDownContent}" />
									</ContentControl>
								</Popup>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger SourceName="PART_DropDownButton"
										 Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="Arrow"
											Property="Fill"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
								<Trigger SourceName="PART_DropDownButton"
										 Property="IsPressed"
										 Value="True">
									<Setter TargetName="Arrow"
											Property="Fill"
											Value="{StaticResource MetroAccentTextBrush}" />
								</Trigger>
								<Trigger SourceName="PART_DropDownButton"
										 Property="IsChecked"
										 Value="True">
									<Setter TargetName="Arrow"
											Property="Fill"
											Value="{StaticResource MetroAccentTextBrush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="ToolBarDropDownMenuButtonStyle"
				   TargetType="v:DropDownMenuButton"
				   BasedOn="{StaticResource ToolBarButtonBaseStyle}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="v:DropDownMenuButton">
							<Border BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Padding="{TemplateBinding Padding}">
								<Grid Margin="2,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
													  Content="{TemplateBinding Content}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  RecognizesAccessKey="True"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
									<Path Name="Arrow"
										  Grid.Column="1"
										  Margin="4,0,-1,0"
										  Fill="{StaticResource MetroControlDarkDarkBrush}"
										  VerticalAlignment="Center"
										  Data="M0,0 6,0 3,3z" />
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="Arrow"
											Property="Fill"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
								<Trigger Property="IsPressed"
										 Value="True">
									<Setter TargetName="Arrow"
											Property="Fill"
											Value="{StaticResource MetroAccentTextBrush}" />
								</Trigger>
								<Trigger Property="IsChecked"
										 Value="True">
									<Setter TargetName="Arrow"
											Property="Fill"
											Value="{StaticResource MetroAccentTextBrush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="ToolBarSplitMenuButtonStyle"
				   TargetType="v:SplitMenuButton"
				   BasedOn="{StaticResource ToolBarButtonBaseStyle}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="v:SplitMenuButton">
							<Border Name="Bd">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Border Name="ActionButtonBorder"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="{TemplateBinding BorderThickness}"
											Background="{TemplateBinding Background}"
											Padding="{TemplateBinding Padding}">
										<ContentPresenter Margin="2,0"
														  ContentTemplate="{TemplateBinding ContentTemplate}"
														  Content="{TemplateBinding Content}"
														  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														  RecognizesAccessKey="True"
														  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
									</Border>
									<ToggleButton Name="PART_ToggleButton"
												  Grid.Column="1"
												  Margin="1,0,0,0"
												  Padding="0"
												  Foreground="{StaticResource MetroControlDarkDarkBrush}"
												  IsTabStop="False"
												  Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
										<ToggleButton.IsHitTestVisible>
											<Binding Path="IsChecked"
													 RelativeSource="{RelativeSource Self}">
												<Binding.Converter>
													<toolkit:InverseBoolConverter />
												</Binding.Converter>
											</Binding>
										</ToggleButton.IsHitTestVisible>
										<Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ButtonBase}}"
											  VerticalAlignment="Center"
											  Data="M0,0 6,0 3,3z" />
									</ToggleButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="PART_ToggleButton"
											Property="Background"
											Value="{StaticResource MetroHighlightBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
								<Trigger SourceName="PART_ToggleButton"
										 Property="IsPressed"
										 Value="True">
									<Setter TargetName="ActionButtonBorder"
											Property="Background"
											Value="Transparent" />
									<Setter TargetName="PART_ToggleButton"
											Property="Background"
											Value="Transparent" />
									<Setter Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="Bd"
											Property="Background"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
								<Trigger SourceName="PART_ToggleButton"
										 Property="IsChecked"
										 Value="True">
									<Setter TargetName="ActionButtonBorder"
											Property="Background"
											Value="Transparent" />
									<Setter TargetName="PART_ToggleButton"
											Property="Background"
											Value="Transparent" />
									<Setter Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="PART_ToggleButton"
											Property="Foreground"
											Value="{StaticResource MetroAccentTextBrush}" />
									<Setter TargetName="Bd"
											Property="Background"
											Value="{StaticResource MetroAccentBrush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="InformationBarStyle"
				   TargetType="ContentControl">
				<Setter Property="Background"
						Value="{StaticResource MetroAccentBrush}" />
				<Setter Property="Foreground"
						Value="{StaticResource MetroAccentTextBrush}" />
				<Setter Property="Padding"
						Value="16,4,8,4" />
				<Setter Property="VerticalAlignment"
						Value="Top" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ContentControl">
							<Border Background="{TemplateBinding Background}"
									Padding="{TemplateBinding Padding}">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  ContentTemplate="{TemplateBinding ContentTemplate}" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="TabControl">
				<Setter Property="OverridesDefaultStyle"
						Value="True" />
				<Setter Property="HorizontalContentAlignment"
						Value="Stretch" />
				<Setter Property="VerticalContentAlignment"
						Value="Stretch" />
				<Setter Property="Background"
						Value="{StaticResource MetroWindowBackgroundBrush}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="TabControl">
							<DockPanel LastChildFill="True">
								<StackPanel Name="TabStripPanel"
											Orientation="Horizontal"
											IsItemsHost="True"
											Background="{StaticResource MetroControlDarkBrush}"
											DockPanel.Dock="Top" />
								<Border Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}">
									<ContentPresenter ContentSource="SelectedContent"
													  ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentStringFormat="{TemplateBinding ContentStringFormat}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
							</DockPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="TabStripPlacement"
										 Value="Bottom">
									<Setter TargetName="TabStripPanel"
											Property="DockPanel.Dock"
											Value="Bottom" />
								</Trigger>
								<Trigger Property="TabStripPlacement"
										 Value="Left">
									<Setter TargetName="TabStripPanel"
											Property="DockPanel.Dock"
											Value="Left" />
									<Setter TargetName="TabStripPanel"
											Property="Orientation"
											Value="Vertical" />
								</Trigger>
								<Trigger Property="TabStripPlacement"
										 Value="Right">
									<Setter TargetName="TabStripPanel"
											Property="DockPanel.Dock"
											Value="Right" />
									<Setter TargetName="TabStripPanel"
											Property="Orientation"
											Value="Vertical" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="TabItem">
				<Setter Property="OverridesDefaultStyle"
						Value="True" />
				<Setter Property="Background"
						Value="{Binding Background, RelativeSource={RelativeSource AncestorType=TabControl}}" />
				<Setter Property="Padding"
						Value="8,4" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="TabItem">
							<Grid>
								<Border Name="Border"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}">
									<ContentPresenter ContentSource="Header"
													  ContentTemplate="{TemplateBinding HeaderTemplate}"
													  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsSelected"
										 Value="True">
									<Setter TargetName="Border"
											Property="Background"
											Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
								</Trigger>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="Border"
											Property="Background"
											Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
								</Trigger>
								<DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
											 Value="Left">
									<Setter TargetName="Border"
											Property="LayoutTransform">
										<Setter.Value>
											<RotateTransform Angle="90" />
										</Setter.Value>
									</Setter>
								</DataTrigger>
								<DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
											 Value="Right">
									<Setter TargetName="Border"
											Property="LayoutTransform">
										<Setter.Value>
											<RotateTransform Angle="90" />
										</Setter.Value>
									</Setter>
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="dz:TabablzControl">
				<Setter Property="OverridesDefaultStyle"
						Value="True" />
				<Setter Property="HorizontalContentAlignment"
						Value="Stretch" />
				<Setter Property="VerticalContentAlignment"
						Value="Stretch" />
				<Setter Property="Background"
						Value="{StaticResource MetroWindowBackgroundBrush}" />
				<Setter Property="BorderThickness"
						Value="0" />
				<Setter Property="Margin"
						Value="0" />
				<Setter Property="Padding"
						Value="0" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="dz:TabablzControl">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<StackPanel Name="TabStripPanel"
											Orientation="Horizontal"
											Background="{StaticResource MetroControlDarkBrush}"
											Grid.ColumnSpan="2">
									<ContentControl Name="PrefixContentControl"
													Content="{TemplateBinding HeaderPrefixContent}"
													ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
													ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
													ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}" />
									<dz:DragablzItemsControl Name="PART_HeaderItemsControl"
															 ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
															 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
															 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
															 ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
															 ItemTemplate="{TemplateBinding CustomHeaderItemTemplate}"
															 FixedItemCount="{TemplateBinding FixedHeaderCount}"
															 HorizontalAlignment="Left"
															 VerticalAlignment="Top">
										<dz:DragablzItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<Canvas IsItemsHost="True" />
											</ItemsPanelTemplate>
										</dz:DragablzItemsControl.ItemsPanel>
										<dz:DragablzItemsControl.Template>
											<ControlTemplate TargetType="dz:DragablzItemsControl">
												<ItemsPresenter Width="{TemplateBinding ItemsPresenterWidth}"
																Height="{TemplateBinding ItemsPresenterHeight}" />
											</ControlTemplate>
										</dz:DragablzItemsControl.Template>
									</dz:DragablzItemsControl>
									<ContentControl Name="SuffixContentControl"
													Content="{TemplateBinding HeaderSuffixContent}"
													ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
													ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
													ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}" />
								</StackPanel>
								<Border Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}"
										Grid.Column="1"
										Grid.Row="1">
									<Grid Name="PART_ItemsHolder"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="TabStripPlacement"
										 Value="Top">
									<Setter TargetName="PART_HeaderItemsControl"
											Property="MaxWidth">
										<Setter.Value>
											<MultiBinding>
												<MultiBinding.Converter>
													<dz:TabablzHeaderSizeConverter Orientation="Horizontal" />
												</MultiBinding.Converter>
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="ActualWidth" />
												<Binding RelativeSource="{RelativeSource Self}"
														 Path="ItemsPresenterWidth" />
												<Binding ElementName="PrefixContentControl"
														 Path="ActualWidth" />
												<Binding ElementName="SuffixContentControl"
														 Path="DesiredSize.Width" />
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="TabStripPlacement"
										 Value="Bottom">
									<Setter TargetName="TabStripPanel"
											Property="Grid.Row"
											Value="2" />
									<Setter TargetName="PART_HeaderItemsControl"
											Property="MaxWidth">
										<Setter.Value>
											<MultiBinding>
												<MultiBinding.Converter>
													<dz:TabablzHeaderSizeConverter Orientation="Horizontal" />
												</MultiBinding.Converter>
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="ActualWidth" />
												<Binding RelativeSource="{RelativeSource Self}"
														 Path="ItemsPresenterWidth" />
												<Binding ElementName="PrefixContentControl"
														 Path="ActualWidth" />
												<Binding ElementName="SuffixContentControl"
														 Path="DesiredSize.Width" />
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="TabStripPlacement"
										 Value="Left">
									<Setter TargetName="TabStripPanel"
											Property="Grid.ColumnSpan"
											Value="1" />
									<Setter TargetName="TabStripPanel"
											Property="Grid.RowSpan"
											Value="3" />
									<Setter TargetName="TabStripPanel"
											Property="Orientation"
											Value="Vertical" />
									<Setter TargetName="PART_HeaderItemsControl"
											Property="MaxHeight">
										<Setter.Value>
											<MultiBinding>
												<MultiBinding.Converter>
													<dz:TabablzHeaderSizeConverter Orientation="Vertical" />
												</MultiBinding.Converter>
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="ActualHeight" />
												<Binding RelativeSource="{RelativeSource Self}"
														 Path="ItemsPresenterHeight" />
												<Binding ElementName="PrefixContentControl"
														 Path="ActualHeight" />
												<Binding ElementName="SuffixContentControl"
														 Path="DesiredSize.Height" />
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="TabStripPlacement"
										 Value="Right">
									<Setter TargetName="TabStripPanel"
											Property="Grid.Column"
											Value="2" />
									<Setter TargetName="TabStripPanel"
											Property="Grid.ColumnSpan"
											Value="1" />
									<Setter TargetName="TabStripPanel"
											Property="Grid.RowSpan"
											Value="3" />
									<Setter TargetName="TabStripPanel"
											Property="Orientation"
											Value="Vertical" />
									<Setter TargetName="PART_HeaderItemsControl"
											Property="MaxHeight">
										<Setter.Value>
											<MultiBinding>
												<MultiBinding.Converter>
													<dz:TabablzHeaderSizeConverter Orientation="Vertical" />
												</MultiBinding.Converter>
												<Binding RelativeSource="{RelativeSource TemplatedParent}"
														 Path="ActualHeight" />
												<Binding RelativeSource="{RelativeSource Self}"
														 Path="ItemsPresenterHeight" />
												<Binding ElementName="PrefixContentControl"
														 Path="ActualHeight" />
												<Binding ElementName="SuffixContentControl"
														 Path="DesiredSize.Height" />
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="dz:DragablzItem">
				<Setter Property="OverridesDefaultStyle"
						Value="True" />
				<Setter Property="Canvas.Left"
						Value="{Binding X, RelativeSource={RelativeSource Self}}" />
				<Setter Property="Canvas.Top"
						Value="{Binding Y, RelativeSource={RelativeSource Self}}" />
				<Setter Property="Background"
						Value="{Binding Background, RelativeSource={RelativeSource AncestorType=dz:TabablzControl}}" />
				<Setter Property="Padding"
						Value="8,4" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="dz:DragablzItem">
							<Grid>
								<Border Name="Border"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Padding="{TemplateBinding Padding}">
									<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
													  ContentStringFormat="{TemplateBinding ContentStringFormat}"
													  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
													  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
								<Thumb Name="PART_Thumb"
									   HorizontalAlignment="Stretch"
									   VerticalContentAlignment="Stretch"
									   Background="Transparent">
									<Thumb.Template>
										<ControlTemplate TargetType="Thumb">
											<Border Background="{TemplateBinding Background}" />
										</ControlTemplate>
									</Thumb.Template>
								</Thumb>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsSelected"
										 Value="True">
									<Setter TargetName="Border"
											Property="Background"
											Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
								</Trigger>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="Border"
											Property="Background"
											Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
								</Trigger>
								<DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
											 Value="Left">
									<Setter TargetName="Border"
											Property="LayoutTransform">
										<Setter.Value>
											<RotateTransform Angle="90" />
										</Setter.Value>
									</Setter>
								</DataTrigger>
								<DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
											 Value="Right">
									<Setter TargetName="Border"
											Property="LayoutTransform">
										<Setter.Value>
											<RotateTransform Angle="90" />
										</Setter.Value>
									</Setter>
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
